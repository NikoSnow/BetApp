package com.mycompany.betappmaven.Vista;

import com.mycompany.betappmaven.DAO.DaoApuesta;
import com.mycompany.betappmaven.DB.Pool;
import com.mycompany.betappmaven.Modelo.ApuestaFinal;
import java.sql.Connection;
import java.util.Date;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nicolas
 */
public class PartidosA extends javax.swing.JFrame {

    /**
     * Creates new form PartidosA
     */
    public PartidosA() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        cargar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tablaPartidos1 = new javax.swing.JTable();
        local = new javax.swing.JTextField();
        visit = new javax.swing.JTextField();
        buscar = new javax.swing.JTextField();
        estado = new javax.swing.JTextField();
        cambiarEstado = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton2.setText("Ingresar Marcador");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton1.setText("Volver");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        cargar.setText("Cargar Datos");
        cargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cargarActionPerformed(evt);
            }
        });

        modificar.setText("Modificar Partido");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        tablaPartidos1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id Partido", "Local", "Visitante", "Jugado", "Hora de Inicio", "Goles Local", "Goles Visitante"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaPartidos1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tablaPartidos1.getTableHeader().setReorderingAllowed(false);
        tablaPartidos1.setUpdateSelectionOnSort(false);
        tablaPartidos1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablaPartidos1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tablaPartidos1);

        visit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                visitActionPerformed(evt);
            }
        });

        cambiarEstado.setText("Cambiar Estado");
        cambiarEstado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cambiarEstadoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(modificar)
                            .addGap(59, 59, 59))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(94, 94, 94))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(local, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(37, 37, 37)
                            .addComponent(visit, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(50, 50, 50))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap()))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(cambiarEstado)
                        .addGap(60, 60, 60))))
            .addGroup(layout.createSequentialGroup()
                .addGap(206, 206, 206)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cargar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(48, 430, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(cambiarEstado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(local, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(visit, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addComponent(modificar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cargar, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    Pool metodospool = new Pool();
    
    private void cargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cargarActionPerformed

        Connection conect = null;
        String query =("SELECT  idPartido, localia, visitante, jugado, horaInicio, marcadorLocal, marcadorVisitante FROM Partido");
        try {

            conect = metodospool.dataSource.getConnection();
            DefaultTableModel dtm = new DefaultTableModel();
            tablaPartidos1.setModel(dtm);

            PreparedStatement ps = conect.prepareStatement(query);
            ResultSet rs = ps.executeQuery();
            ResultSetMetaData rsm = rs.getMetaData();
            int columnas = rsm.getColumnCount();

            dtm.addColumn("Id");    
            dtm.addColumn("Local");
            dtm.addColumn("Visitante");
            dtm.addColumn("Jugado");
            dtm.addColumn("Hora de Inicio");
            dtm.addColumn("Goles Local");
            dtm.addColumn("Goles Visitante");
            
            tablaPartidos1.getColumnModel().getColumn(0).setPreferredWidth(30);
            tablaPartidos1.getColumnModel().getColumn(1).setPreferredWidth(95);
            tablaPartidos1.getColumnModel().getColumn(2).setPreferredWidth(95);
            tablaPartidos1.getColumnModel().getColumn(3).setPreferredWidth(50);
            tablaPartidos1.getColumnModel().getColumn(4).setPreferredWidth(130);
            tablaPartidos1.getColumnModel().getColumn(5).setPreferredWidth(80);
            tablaPartidos1.getColumnModel().getColumn(6).setPreferredWidth(100);

            while(rs.next()){
                Object[] filas = new Object[columnas];
                for(int i=0; i<columnas; i++){
                    filas[i] = rs.getObject(i + 1);
                }
                dtm.addRow(filas);
            }
            
            //cerrarPartido();

        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }

    }//GEN-LAST:event_cargarActionPerformed

    /*void cerrarPartido() throws SQLException{
        
        String query1 =("SELECT horaInicio FROM Partido;");
        Connection conect1 = null;
                    conect1 = metodospool.dataSource.getConnection();
                    Statement ps = conect1.createStatement();
                    ResultSet rs = ps.executeQuery(query1);
        
         
         String horaInicial6; 
         while(rs.next()){
                    horaInicial6 = rs.getString(1);
                    SimpleDateFormat formato = new SimpleDateFormat("dd-MM-yyyy hh:mm");
                    horaInicial6 = horaInicial6.trim();
                    System.out.println("horaInicial");

                    Date fecha = null;

                    try {
                       fecha = (Date) formato.parse(horaInicial6);
                       } catch (Exception ex) {
                           ex.printStackTrace();
                       }

                    System.out.println(fecha.toString());
                    Date fechaActual = new Date();
                    System.out.println(fechaActual.toString());

                    Calendar c = Calendar.getInstance();
                    c.setTime(fechaActual);

                    fechaActual=c.getTime();
         
                if(fecha == fechaActual && fecha.compareTo(fechaActual) > 0){
                       Connection conect = null;

                       String query =("UPDATE Partido SET jugado='S' WHERE horaInicio='"+horaIn.getText()+"';");

                       try{
                           conect = metodospool.dataSource.getConnection();
                           DefaultTableModel dtm = new DefaultTableModel();
                           tablaPartidos1.setModel(dtm);

                           PreparedStatement ps1 = conect.prepareStatement(query);

                           ps1.executeUpdate();
                           JOptionPane.showMessageDialog(null, "Inicio de partido!");

                       } catch (SQLException ex) {
                           System.err.println(ex.toString());
                       }

                }
         
         }
        
    }
    */
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void visitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_visitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_visitActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        
        Connection conect = null;
        String query =("UPDATE Partido SET marcadorLocal='"+local.getText()+"', marcadorVisitante='"
                +visit.getText()+"' WHERE idPartido='"+buscar.getText()+"';");

        try{
            conect = metodospool.dataSource.getConnection();
            DefaultTableModel dtm = new DefaultTableModel();
            tablaPartidos1.setModel(dtm);

            PreparedStatement ps = conect.prepareStatement(query);
            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Marcador Actualizado");
            tablaPartidos1.setModel(dtm);
            
        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }

  
        
    }//GEN-LAST:event_modificarActionPerformed

    private void tablaPartidos1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablaPartidos1MouseClicked
        
        int fila = tablaPartidos1.getSelectedRow();
         if(fila>=0){
             estado.setText(tablaPartidos1.getValueAt(fila, 3).toString());
             buscar.setText(tablaPartidos1.getValueAt(fila, 0).toString());
             local.setText(tablaPartidos1.getValueAt(fila, 5).toString());
             visit.setText(tablaPartidos1.getValueAt(fila, 6).toString());
         }else{
             JOptionPane.showMessageDialog(null, "Fila no seleccionada");
         }
        
    }//GEN-LAST:event_tablaPartidos1MouseClicked

    private void cambiarEstadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cambiarEstadoActionPerformed
        Connection conect = null;
        String query =("UPDATE Partido SET jugado='"+estado.getText()+"' WHERE idPartido='"+buscar.getText()+"';");

        try{
            conect = metodospool.dataSource.getConnection();
            DefaultTableModel dtm = new DefaultTableModel();
            tablaPartidos1.setModel(dtm);

            PreparedStatement ps = conect.prepareStatement(query);
            
            ps.executeUpdate();
            JOptionPane.showMessageDialog(null, "Partido Cerrado");
            tablaPartidos1.setModel(dtm);
            
        } catch (SQLException ex) {
            System.err.println(ex.toString());
        }
    }//GEN-LAST:event_cambiarEstadoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PartidosA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PartidosA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PartidosA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PartidosA.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PartidosA().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField buscar;
    private javax.swing.JButton cambiarEstado;
    private javax.swing.JButton cargar;
    private javax.swing.JTextField estado;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField local;
    private javax.swing.JButton modificar;
    private javax.swing.JTable tablaPartidos1;
    private javax.swing.JTextField visit;
    // End of variables declaration//GEN-END:variables
}
